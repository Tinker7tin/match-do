// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Order.proto
// Protobuf Java Version: 4.30.0-rc2

package org.order.me.model.proto;

public final class OrderProto {
  private OrderProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 30,
      /* patch= */ 0,
      /* suffix= */ "-rc2",
      OrderProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OrderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:order.Order)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 订单ID
     * </pre>
     *
     * <code>int64 order_id = 1;</code>
     * @return The orderId.
     */
    long getOrderId();

    /**
     * <pre>
     * 交易对（如 BTC/USDT）
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    String getSymbol();
    /**
     * <pre>
     * 交易对（如 BTC/USDT）
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * 交易类型
     * </pre>
     *
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     * 价格（建议使用字符串表示精度）
     * </pre>
     *
     * <code>int64 price = 4;</code>
     * @return The price.
     */
    long getPrice();

    /**
     * <pre>
     * 交易数量（建议使用字符串表示精度）
     * </pre>
     *
     * <code>int64 amount = 5;</code>
     * @return The amount.
     */
    long getAmount();

    /**
     * <pre>
     * 未成交数量
     * </pre>
     *
     * <code>int64 remaining = 6;</code>
     * @return The remaining.
     */
    long getRemaining();

    /**
     * <pre>
     * 交易方式
     * </pre>
     *
     * <code>int32 trade_type = 7;</code>
     * @return The tradeType.
     */
    int getTradeType();

    /**
     * <pre>
     * 订单状态
     * </pre>
     *
     * <code>int32 status = 8;</code>
     * @return The status.
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code order.Order}
   */
  public static final class Order extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:order.Order)
      OrderOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 30,
        /* patch= */ 0,
        /* suffix= */ "-rc2",
        Order.class.getName());
    }
    // Use Order.newBuilder() to construct.
    private Order(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Order() {
      symbol_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OrderProto.internal_static_order_Order_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OrderProto.internal_static_order_Order_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Order.class, Builder.class);
    }

    public static final int ORDER_ID_FIELD_NUMBER = 1;
    private long orderId_ = 0L;
    /**
     * <pre>
     * 订单ID
     * </pre>
     *
     * <code>int64 order_id = 1;</code>
     * @return The orderId.
     */
    @Override
    public long getOrderId() {
      return orderId_;
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object symbol_ = "";
    /**
     * <pre>
     * 交易对（如 BTC/USDT）
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @Override
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 交易对（如 BTC/USDT）
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_ = 0;
    /**
     * <pre>
     * 交易类型
     * </pre>
     *
     * <code>int32 type = 3;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int PRICE_FIELD_NUMBER = 4;
    private long price_ = 0L;
    /**
     * <pre>
     * 价格（建议使用字符串表示精度）
     * </pre>
     *
     * <code>int64 price = 4;</code>
     * @return The price.
     */
    @Override
    public long getPrice() {
      return price_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 5;
    private long amount_ = 0L;
    /**
     * <pre>
     * 交易数量（建议使用字符串表示精度）
     * </pre>
     *
     * <code>int64 amount = 5;</code>
     * @return The amount.
     */
    @Override
    public long getAmount() {
      return amount_;
    }

    public static final int REMAINING_FIELD_NUMBER = 6;
    private long remaining_ = 0L;
    /**
     * <pre>
     * 未成交数量
     * </pre>
     *
     * <code>int64 remaining = 6;</code>
     * @return The remaining.
     */
    @Override
    public long getRemaining() {
      return remaining_;
    }

    public static final int TRADE_TYPE_FIELD_NUMBER = 7;
    private int tradeType_ = 0;
    /**
     * <pre>
     * 交易方式
     * </pre>
     *
     * <code>int32 trade_type = 7;</code>
     * @return The tradeType.
     */
    @Override
    public int getTradeType() {
      return tradeType_;
    }

    public static final int STATUS_FIELD_NUMBER = 8;
    private int status_ = 0;
    /**
     * <pre>
     * 订单状态
     * </pre>
     *
     * <code>int32 status = 8;</code>
     * @return The status.
     */
    @Override
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (orderId_ != 0L) {
        output.writeInt64(1, orderId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(symbol_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, symbol_);
      }
      if (type_ != 0) {
        output.writeInt32(3, type_);
      }
      if (price_ != 0L) {
        output.writeInt64(4, price_);
      }
      if (amount_ != 0L) {
        output.writeInt64(5, amount_);
      }
      if (remaining_ != 0L) {
        output.writeInt64(6, remaining_);
      }
      if (tradeType_ != 0) {
        output.writeInt32(7, tradeType_);
      }
      if (status_ != 0) {
        output.writeInt32(8, status_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (orderId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, orderId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(symbol_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, symbol_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (price_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, price_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, amount_);
      }
      if (remaining_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, remaining_);
      }
      if (tradeType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tradeType_);
      }
      if (status_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Order)) {
        return super.equals(obj);
      }
      Order other = (Order) obj;

      if (getOrderId()
          != other.getOrderId()) return false;
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (getType()
          != other.getType()) return false;
      if (getPrice()
          != other.getPrice()) return false;
      if (getAmount()
          != other.getAmount()) return false;
      if (getRemaining()
          != other.getRemaining()) return false;
      if (getTradeType()
          != other.getTradeType()) return false;
      if (getStatus()
          != other.getStatus()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ORDER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOrderId());
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPrice());
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + REMAINING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRemaining());
      hash = (37 * hash) + TRADE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getTradeType();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Order parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Order parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Order parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Order parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Order parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Order parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Order parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Order parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Order parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static Order parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Order parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static Order parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Order prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code order.Order}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:order.Order)
        OrderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OrderProto.internal_static_order_Order_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OrderProto.internal_static_order_Order_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Order.class, Builder.class);
      }

      // Construct using org.order.me.model.proto.OrderProto.Order.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        orderId_ = 0L;
        symbol_ = "";
        type_ = 0;
        price_ = 0L;
        amount_ = 0L;
        remaining_ = 0L;
        tradeType_ = 0;
        status_ = 0;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OrderProto.internal_static_order_Order_descriptor;
      }

      @Override
      public Order getDefaultInstanceForType() {
        return Order.getDefaultInstance();
      }

      @Override
      public Order build() {
        Order result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Order buildPartial() {
        Order result = new Order(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(Order result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.orderId_ = orderId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.symbol_ = symbol_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.price_ = price_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.amount_ = amount_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.remaining_ = remaining_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.tradeType_ = tradeType_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.status_ = status_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Order) {
          return mergeFrom((Order)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Order other) {
        if (other == Order.getDefaultInstance()) return this;
        if (other.getOrderId() != 0L) {
          setOrderId(other.getOrderId());
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getPrice() != 0L) {
          setPrice(other.getPrice());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (other.getRemaining() != 0L) {
          setRemaining(other.getRemaining());
        }
        if (other.getTradeType() != 0) {
          setTradeType(other.getTradeType());
        }
        if (other.getStatus() != 0) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                orderId_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                symbol_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                price_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                amount_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                remaining_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                tradeType_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                status_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long orderId_ ;
      /**
       * <pre>
       * 订单ID
       * </pre>
       *
       * <code>int64 order_id = 1;</code>
       * @return The orderId.
       */
      @Override
      public long getOrderId() {
        return orderId_;
      }
      /**
       * <pre>
       * 订单ID
       * </pre>
       *
       * <code>int64 order_id = 1;</code>
       * @param value The orderId to set.
       * @return This builder for chaining.
       */
      public Builder setOrderId(long value) {

        orderId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 订单ID
       * </pre>
       *
       * <code>int64 order_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrderId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        orderId_ = 0L;
        onChanged();
        return this;
      }

      private Object symbol_ = "";
      /**
       * <pre>
       * 交易对（如 BTC/USDT）
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 交易对（如 BTC/USDT）
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 交易对（如 BTC/USDT）
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        symbol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 交易对（如 BTC/USDT）
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        symbol_ = getDefaultInstance().getSymbol();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 交易对（如 BTC/USDT）
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        symbol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 交易类型
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 交易类型
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 交易类型
       * </pre>
       *
       * <code>int32 type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }

      private long price_ ;
      /**
       * <pre>
       * 价格（建议使用字符串表示精度）
       * </pre>
       *
       * <code>int64 price = 4;</code>
       * @return The price.
       */
      @Override
      public long getPrice() {
        return price_;
      }
      /**
       * <pre>
       * 价格（建议使用字符串表示精度）
       * </pre>
       *
       * <code>int64 price = 4;</code>
       * @param value The price to set.
       * @return This builder for chaining.
       */
      public Builder setPrice(long value) {

        price_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 价格（建议使用字符串表示精度）
       * </pre>
       *
       * <code>int64 price = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        price_ = 0L;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <pre>
       * 交易数量（建议使用字符串表示精度）
       * </pre>
       *
       * <code>int64 amount = 5;</code>
       * @return The amount.
       */
      @Override
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * 交易数量（建议使用字符串表示精度）
       * </pre>
       *
       * <code>int64 amount = 5;</code>
       * @param value The amount to set.
       * @return This builder for chaining.
       */
      public Builder setAmount(long value) {

        amount_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 交易数量（建议使用字符串表示精度）
       * </pre>
       *
       * <code>int64 amount = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        amount_ = 0L;
        onChanged();
        return this;
      }

      private long remaining_ ;
      /**
       * <pre>
       * 未成交数量
       * </pre>
       *
       * <code>int64 remaining = 6;</code>
       * @return The remaining.
       */
      @Override
      public long getRemaining() {
        return remaining_;
      }
      /**
       * <pre>
       * 未成交数量
       * </pre>
       *
       * <code>int64 remaining = 6;</code>
       * @param value The remaining to set.
       * @return This builder for chaining.
       */
      public Builder setRemaining(long value) {

        remaining_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 未成交数量
       * </pre>
       *
       * <code>int64 remaining = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemaining() {
        bitField0_ = (bitField0_ & ~0x00000020);
        remaining_ = 0L;
        onChanged();
        return this;
      }

      private int tradeType_ ;
      /**
       * <pre>
       * 交易方式
       * </pre>
       *
       * <code>int32 trade_type = 7;</code>
       * @return The tradeType.
       */
      @Override
      public int getTradeType() {
        return tradeType_;
      }
      /**
       * <pre>
       * 交易方式
       * </pre>
       *
       * <code>int32 trade_type = 7;</code>
       * @param value The tradeType to set.
       * @return This builder for chaining.
       */
      public Builder setTradeType(int value) {

        tradeType_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 交易方式
       * </pre>
       *
       * <code>int32 trade_type = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTradeType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tradeType_ = 0;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <pre>
       * 订单状态
       * </pre>
       *
       * <code>int32 status = 8;</code>
       * @return The status.
       */
      @Override
      public int getStatus() {
        return status_;
      }
      /**
       * <pre>
       * 订单状态
       * </pre>
       *
       * <code>int32 status = 8;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(int value) {

        status_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 订单状态
       * </pre>
       *
       * <code>int32 status = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000080);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:order.Order)
    }

    // @@protoc_insertion_point(class_scope:order.Order)
    private static final Order DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Order();
    }

    public static Order getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Order>
        PARSER = new com.google.protobuf.AbstractParser<Order>() {
      @Override
      public Order parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Order> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Order> getParserForType() {
      return PARSER;
    }

    @Override
    public Order getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_order_Order_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_order_Order_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\013Order.proto\022\005order\"\215\001\n\005Order\022\020\n\010order_" +
      "id\030\001 \001(\003\022\016\n\006symbol\030\002 \001(\t\022\014\n\004type\030\003 \001(\005\022\r" +
      "\n\005price\030\004 \001(\003\022\016\n\006amount\030\005 \001(\003\022\021\n\tremaini" +
      "ng\030\006 \001(\003\022\022\n\ntrade_type\030\007 \001(\005\022\016\n\006status\030\010" +
      " \001(\005B&\n\030org.order.me.model.protoB\nOrderP" +
      "rotob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_order_Order_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_order_Order_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_order_Order_descriptor,
        new String[] { "OrderId", "Symbol", "Type", "Price", "Amount", "Remaining", "TradeType", "Status", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
